
package eu.atosresearch.seiplab.yourbpm.kb.businesslogic;

import java.net.MalformedURLException;
import java.net.URL;
import java.util.logging.Logger;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.1.6 in JDK 6
 * Generated source version: 2.1
 * 
 */

//@WebServiceClient(name = "WebN1Service", targetNamespace = "http://businesslogic.webn1.atosresearch.eu", wsdlLocation = "http://212.170.156.196:8080/axis2/services/WebN1Service?wsdl")
@WebServiceClient(name = "WebN1Service", targetNamespace = "http://businesslogic.webn1.atosresearch.eu", wsdlLocation = "http://localhost:8080/axis2/services/WebN1Service?wsdl")
public class WebN1Service
    extends Service
{

    private final static URL WEBN1SERVICE_WSDL_LOCATION;
    private final static Logger logger = Logger.getLogger(eu.atosresearch.seiplab.yourbpm.kb.businesslogic.WebN1Service.class.getName());
//    private static String wsdlURL = "http://212.170.156.196:8080/axis2/services/WebN1Service?wsdl";
//    private static String wsdlURL = "http://192.168.215.82:8080/axis2/services/WebN1Service?wsdl";
    private static String wsdlURL = "http://localhost:8080/axis2/services/WebN1Service?wsdl";
    static {
        URL url = null;
        try {
            URL baseUrl;
            baseUrl = eu.atosresearch.seiplab.yourbpm.kb.businesslogic.WebN1Service.class.getResource(".");
            url = new URL(baseUrl, wsdlURL);
        } catch (MalformedURLException e) {
        	logger.warning("Failed to create URL for the wsdl Location: '" + wsdlURL + "', retrying as a local file");
        	logger.warning(e.getMessage());
        }
        WEBN1SERVICE_WSDL_LOCATION = url;
    }

    public WebN1Service(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public WebN1Service() {
        super(WEBN1SERVICE_WSDL_LOCATION, new QName("http://businesslogic.webn1.atosresearch.eu", "WebN1Service"));
    }

    /**
     * 
     * @return
     *     returns WebN1ServicePortType
     */
    @WebEndpoint(name = "WebN1ServiceHttpSoap11Endpoint")
    public WebN1ServicePortType getWebN1ServiceHttpSoap11Endpoint() {
        return super.getPort(new QName("http://businesslogic.webn1.atosresearch.eu", "WebN1ServiceHttpSoap11Endpoint"), WebN1ServicePortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns WebN1ServicePortType
     */
    @WebEndpoint(name = "WebN1ServiceHttpSoap11Endpoint")
    public WebN1ServicePortType getWebN1ServiceHttpSoap11Endpoint(WebServiceFeature... features) {
        return super.getPort(new QName("http://businesslogic.webn1.atosresearch.eu", "WebN1ServiceHttpSoap11Endpoint"), WebN1ServicePortType.class, features);
    }

}
